When would you want to use a remote repository rather than keeping all your work local?
Examples of using the remote repository instead of the local repository would be if you are using a different computer or if someone else is working on the same repository.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
I may be developing some code locally and may not be ready to have the new code to the same branch in GitHub. I need to come to a stable point in my code locally before bringing down the code from GitHub and merging it in.
Describe the differences between forks, clones, and branches. When would you use one instead of another?
A clone is a copy of a Git repository from either a remote repository or another local repository. A fork is a clone of a remote Git repository from a Git account to another Git account. A branch is a new series of commits from an original commit in another branch.
What is the benefit of having a copy of the last known state of the remote stored locally?
The benefit of having a copy of the last known state of the remote stored locally is that you can check whether you are ahead of that copy in your commits. Likewise you can do a git fetch at any point and have all the remote commits that have happened since you started doing your local commits. You can merge when it makes sense in your process.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
To collaborate without Git or GitHub, the group have to keep a backup on a separate location of the current state of the source after each logical change made by a member. When a member was ready to add a new feature, he would have to go through each source file and do a FC or diff and make sure that he added his code in thr right place. This would be much harder. The easier part might be the initial setup and learning curve of Git.